const CHIP_ADDR_R=&h07
const CHIP_ADDR_W=&h06

const CMD_R=&h01
const CMD_W=&h02

const PORTA	  =&h000C
const PORTC	  =&h000E
const OSCCON  =&h0099

const APFCON0 =&h011D
const APFCON1 =&h011E
const ANSELA  =&h018C
const ANSELC  =&h018E
const TRISA   =&h008C
const TRISC   =&h008E
const LATA	  =&h010C
const LATC	  =&h010E
const ADCON0  =&h009D
const ADCON1  =&h009E
const ADRESH  =&h009C
const ADRESL  =&h009B
'const DACCON0 =&h0118
'const DACCON1 =&h0119

const CCP1CON =&h0293
const CCP2CON =&h029A
const CCP3CON =&h0313
const CCPR1L  =&h0291
const CCPR2L  =&h0298
const CCPR3L  =&h0311
const CCPTMRS0=&h029E
const PR2	  =&h001B
const PR4	  =&h0416
const PR6	  =&h041D
const T2CON	  =&h001C
const T4CON	  =&h0417
const T6CON	  =&h041E
'const TMR2	  =&h001A
'const TMR4	  =&h0415

const TXREG	  =&h019A
const SPBRGL  =&h019B
const SPBRGH  =&h019C
const RCSTA	  =&h019D
const TXSTA	  =&h019E
const BAUDCON =&h019F

#define INTERNAL_OSCILLATOR_FREQ_31KHZ_LF 	 0
#define INTERNAL_OSCILLATOR_FREQ_31_25KHZ_MF 1
#define INTERNAL_OSCILLATOR_FREQ_31_25KHZ_HF 2
#define INTERNAL_OSCILLATOR_FREQ_62_5KHZ_MF	 3
#define INTERNAL_OSCILLATOR_FREQ_125KHZ_MF	 4
#define INTERNAL_OSCILLATOR_FREQ_125KHZ_HF	 5
#define INTERNAL_OSCILLATOR_FREQ_250KHZ_MF	 6
#define INTERNAL_OSCILLATOR_FREQ_250KHZ_HF	 7
#define INTERNAL_OSCILLATOR_FREQ_500KHZ_MF	 8
#define INTERNAL_OSCILLATOR_FREQ_500KHZ_HF	 9
#define INTERNAL_OSCILLATOR_FREQ_1MHZ_HF	10
#define INTERNAL_OSCILLATOR_FREQ_2MHZ_HF	11
#define INTERNAL_OSCILLATOR_FREQ_4MHZ_HF	12
#define INTERNAL_OSCILLATOR_FREQ_8MHZ_HF	13
#define INTERNAL_OSCILLATOR_FREQ_16MHZ_HF	14
#define INTERNAL_OSCILLATOR_FREQ_32MHZ_HF	15

enum ADC_CHANNEL
	PIC_ADC0,
	PIC_ADC1,
	PIC_ADC2,
	PIC_ADC3	
end enum

enum IO_PIN
	PIC_PIN0,
	PIC_PIN1,
	PIC_PIN2,
	PIC_PIN3
end enum

enum PWM_CHANNEL
	PIC_PWM_0,
	PIC_PWM_1,
	PIC_PWM_2
end enum

enum PWM_PRESCALER
	PWM_PRE_64, '500KHz for CPU clock of 32MHz
	PWM_PRE_16, '2Mhz  for CPU clock of 32MHz
	PWM_PRE_4,  '8Mhz  for CPU clock of 32MHz
	PWM_PRE_1  '32Mhz  for CPU clock of 32MHz
end enum

enum EUSART_BAUDRATE
	PIC_BRATE_300=1,
	PIC_BRATE_600=2,
	PIC_BRATE_1200=4,
	PIC_BRATE_2400=8,
	PIC_BRATE_4800=16,
	PIC_BRATE_9600=32,
	PIC_BRATE_19200=64,
	PIC_BRATE_38400=128,
	PIC_BRATE_57600=192
end enum

include "super_i2c.tbh"

declare function pic_reg_read(addr as word,length as byte)as string

declare function pic_reg_write(addr as word, data as string)as ok_ng

declare sub pic_reset(scl as pl_io_num,sda as pl_io_num,rst as pl_io_num)
'Calling this sub will hardware-reset the PIC micro.

declare function pic_get_fw_version() as string
'Call this function to obtain the version string for the firmware currently running on the PIC micro.
'The version will always be in the NNN Vxx.yy format, where
'NNN is the firmware name
'xx -- major release (affecting the corresponding Tibbo BASIC library)
'yy -- minor release (not affecting the corresponding Tibbo BASIC library)
